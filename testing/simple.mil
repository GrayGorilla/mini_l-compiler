ident -> IDENT main
dec_list -> epsilon
ident -> IDENT r
dec_help -> ident
array_size -> epsilon
declaration -> dec_help COLON array_size INTEGER
ident -> IDENT a
dec_help -> ident
number -> NUMBER 4
array_size -> ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF
declaration -> dec_help COLON array_size INTEGER
dec_list -> epsilon
declaration SEMICOLON dec_list
declaration SEMICOLON dec_list
ident -> IDENT a
number -> NUMBER 0
term_help -> number
term -> term_help
multiplicative_expr -> term
expression -> multiplicative_expr
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT r
var -> ident
ident -> IDENT a
number -> NUMBER 3
term_help -> number
term -> term_help
multiplicative_expr -> term
expression -> multiplicative_expr
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var_list -> var
var_list -> var COMMA var_list
var_list -> var COMMA var_list
statement -> READ var_list
ident -> IDENT a
number -> NUMBER 0
term_help -> number
term -> term_help
multiplicative_expr -> term
expression -> multiplicative_expr
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT r
var -> ident
ident -> IDENT a
number -> NUMBER 3
term_help -> number
term -> term_help
multiplicative_expr -> term
expression -> multiplicative_expr
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var_list -> var
var_list -> var COMMA var_list
var_list -> var COMMA var_list
statement -> WRITE var_list
sta_loop -> statement SEMICOLON
sta_loop -> statement SEMICOLON sta_loop
function -> FUNCTION ident SEMICOLON BEGIN_PARAMS dec_list END_PARAMS BEGIN_LOCALS dec_list END_LOCALS BEGIN_BODY sta_loop END_BODY
program -> epsilon
program -> function program

-----------------------

func main
. r
.[] a, 4
.[]< a, 3
.< r
.[]< a, 0
.[]> a, 3
.> r
.[]> a, 0
endfunc


